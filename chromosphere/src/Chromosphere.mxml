<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication
  xmlns:mx="http://www.adobe.com/2006/mxml"
  layout="vertical"
  creationComplete="/*cc()*/"
  applicationComplete="cc()"
  >
  <mx:Script>
<![CDATA[
  import mx.core.Window;
  import mx.rpc.events.ResultEvent;
  import mx.rpc.events.FaultEvent;
  import mx.rpc.AsyncToken;
  import mx.rpc.http.HTTPService;
  import mx.events.DropdownEvent;
  import ruby.internals.Eval_c;
  import mx.events.FileEvent;
  import mx.controls.FileSystemList;
  import mx.controls.FileSystemTree;
  import mx.controls.Menu;
  import mx.events.FlexEvent;
  import mx.core.UIComponent;

  import ruby.internals.RubyCore;

  protected var sp:UIComponent;

  protected var browseFile:File;

  protected var dir_root:String;

  protected function cc():void
  {
    dir_root = File.userDirectory.nativePath + "/work/ruby/redsun";
    ti.text = "research/rubyconf.rb";
    read_file(ti.text);
    sp = new UIComponent();
    sp.y = 50;
    this.addChild(sp);
  }

  protected function fileSelected(e:Event=null):void
  {
    ti.text = browseFile.nativePath.substr(dir_root.length);
    read_file(ti.text);
  }

  protected function read_file(name:String):void
  {
    var f:File = new File(dir_root+"/"+name);
    if (f.exists) {
      var fr:FileStream = new FileStream();
      fr.open(f,FileMode.READ);
      ta.text = fr.readUTFBytes(fr.bytesAvailable);
    }
  }

  protected function openButton(filename:String):void
  {
    if (browseFile) {
      browseFile.removeEventListener(Event.SELECT, fileSelected);
    }
    browseFile = new File(dir_root+filename);

    var ffrb:FileFilter = new FileFilter("Ruby Files", "rb");
    var ffall:FileFilter = new FileFilter("All Files", "");

    browseFile.addEventListener(Event.SELECT, fileSelected);
    browseFile.browseForOpen("Open Ruby File", [ffrb,ffall]);

  }

  protected function execute(filename:String):void
  {
    // Call to Ramaze app running on localhost
    var http:HTTPService = new HTTPService();
    http.url = "http://localhost:7000/compile_file/"+filename;
    http.resultFormat = "text";
    http.send();
    http.addEventListener("result", compile_success);
    http.addEventListener("fault", compile_fault);
  }

  protected function execute_bytecode(bytecode:String):void
  {
    // Call to Ramaze app running on localhost
    var http:HTTPService = new HTTPService();
    http.url = "http://localhost:7000/compile/";
    http.resultFormat = "text";
    http.method = "POST";
    http.send({bytecode:bytecode});
    http.addEventListener("result", compile_success);
    http.addEventListener("fault", compile_fault);
  }

  protected function compile_success(e:ResultEvent):void
  {
    var bc:String = e.result.toString();
    run_bytecode(bc);
  }

  protected function run_bytecode(bytecode:String):void
  {
    var rw:RubyWindow = new RubyWindow(bytecode);
    rw.open();
  }

  protected function compile_fault(e:FaultEvent):void
  {
    trace("Compile fail! "+e.fault);
  }

    ]]>
  </mx:Script>
  <mx:HBox width="100%">
    <mx:TextInput width="100%" id="ti"/>
    <mx:Button id="pb" label="Browse..." click="openButton(ti.text)"/>
    <mx:Button label="Execute from Disk" click="execute(ti.text)"/>
    <mx:Button label="Execute text below" click="execute_bytecode(ta.text)"/>
    <mx:CheckBox enabled="false" label="New Window" selected="true" id="nw"/>
  </mx:HBox>
  <mx:TextArea width="100%" height="100%" id="ta" fontFamily="Consolas" fontSize="16"/>
</mx:WindowedApplication>
